version: '3.9'

networks:
  default:
    name: ${PROJECT_NAME:-project}-network
    driver: bridge

volumes:
  db-dev:

services:

  backend:
    build:
      context: ../../
      dockerfile: ./.deploy/develop/Dockerfile
      args:
        USER: ${USER:-user}
    entrypoint: sh -c "./wait-for-it.sh -t 300 db:5432 && /usr/bin/composer install && php /app/artisan migrate --force && php-fpm"
    volumes:
      - ../../laravel:/app
    environment:
      - APP_ENV=local
      - APP_KEY=base64:7t3iJGYKu1jqjeEQixGEL8mXwCr6XgVRmd6ryRII3Jo=
      - APP_DEBUG=True
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=${DB_DATABASE:-postgres}
      - DB_USERNAME=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-QWEasd123$}
    depends_on:
      - db
    container_name: ${PROJECT_NAME:-project}-backend
    restart: unless-stopped

  backend-api:
    image: nginx:1.19-alpine
    volumes:
      - ../../laravel:/app
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - backend
    container_name: ${PROJECT_NAME:-project}-backend-api
    restart: unless-stopped

  db:
    image: postgres:15.0-alpine
    container_name: ${PROJECT_NAME:-project}-db
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD:-QWEasd123$}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_DB=${DB_DATABASE:-postgres}
    volumes:
      - db-dev:/var/lib/postgresql/data

  adminer:
      image: adminer:4.8.1
      container_name: ${PROJECT_NAME:-project}-adminer
      restart: unless-stopped
      depends_on:
          - db

  proxy:
    image: nginx:1.19-alpine
    container_name: ${PROJECT_NAME:-project}-proxy
    volumes:
      - ./proxy:/etc/nginx/conf.d
    ports:
      - ${WEB_PORT:-8000}:80
    depends_on:
      - backend-api
